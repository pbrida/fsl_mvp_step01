import sys
from _sqlite3 import (
    PARSE_COLNAMES as PARSE_COLNAMES,
)
from _sqlite3 import (
    PARSE_DECLTYPES as PARSE_DECLTYPES,
)
from _sqlite3 import (
    SQLITE_ALTER_TABLE as SQLITE_ALTER_TABLE,
)
from _sqlite3 import (
    SQLITE_ANALYZE as SQLITE_ANALYZE,
)
from _sqlite3 import (
    SQLITE_ATTACH as SQLITE_ATTACH,
)
from _sqlite3 import (
    SQLITE_CREATE_INDEX as SQLITE_CREATE_INDEX,
)
from _sqlite3 import (
    SQLITE_CREATE_TABLE as SQLITE_CREATE_TABLE,
)
from _sqlite3 import (
    SQLITE_CREATE_TEMP_INDEX as SQLITE_CREATE_TEMP_INDEX,
)
from _sqlite3 import (
    SQLITE_CREATE_TEMP_TABLE as SQLITE_CREATE_TEMP_TABLE,
)
from _sqlite3 import (
    SQLITE_CREATE_TEMP_TRIGGER as SQLITE_CREATE_TEMP_TRIGGER,
)
from _sqlite3 import (
    SQLITE_CREATE_TEMP_VIEW as SQLITE_CREATE_TEMP_VIEW,
)
from _sqlite3 import (
    SQLITE_CREATE_TRIGGER as SQLITE_CREATE_TRIGGER,
)
from _sqlite3 import (
    SQLITE_CREATE_VIEW as SQLITE_CREATE_VIEW,
)
from _sqlite3 import (
    SQLITE_CREATE_VTABLE as SQLITE_CREATE_VTABLE,
)
from _sqlite3 import (
    SQLITE_DELETE as SQLITE_DELETE,
)
from _sqlite3 import (
    SQLITE_DENY as SQLITE_DENY,
)
from _sqlite3 import (
    SQLITE_DETACH as SQLITE_DETACH,
)
from _sqlite3 import (
    SQLITE_DONE as SQLITE_DONE,
)
from _sqlite3 import (
    SQLITE_DROP_INDEX as SQLITE_DROP_INDEX,
)
from _sqlite3 import (
    SQLITE_DROP_TABLE as SQLITE_DROP_TABLE,
)
from _sqlite3 import (
    SQLITE_DROP_TEMP_INDEX as SQLITE_DROP_TEMP_INDEX,
)
from _sqlite3 import (
    SQLITE_DROP_TEMP_TABLE as SQLITE_DROP_TEMP_TABLE,
)
from _sqlite3 import (
    SQLITE_DROP_TEMP_TRIGGER as SQLITE_DROP_TEMP_TRIGGER,
)
from _sqlite3 import (
    SQLITE_DROP_TEMP_VIEW as SQLITE_DROP_TEMP_VIEW,
)
from _sqlite3 import (
    SQLITE_DROP_TRIGGER as SQLITE_DROP_TRIGGER,
)
from _sqlite3 import (
    SQLITE_DROP_VIEW as SQLITE_DROP_VIEW,
)
from _sqlite3 import (
    SQLITE_DROP_VTABLE as SQLITE_DROP_VTABLE,
)
from _sqlite3 import (
    SQLITE_FUNCTION as SQLITE_FUNCTION,
)
from _sqlite3 import (
    SQLITE_IGNORE as SQLITE_IGNORE,
)
from _sqlite3 import (
    SQLITE_INSERT as SQLITE_INSERT,
)
from _sqlite3 import (
    SQLITE_OK as SQLITE_OK,
)
from _sqlite3 import (
    SQLITE_PRAGMA as SQLITE_PRAGMA,
)
from _sqlite3 import (
    SQLITE_READ as SQLITE_READ,
)
from _sqlite3 import (
    SQLITE_RECURSIVE as SQLITE_RECURSIVE,
)
from _sqlite3 import (
    SQLITE_REINDEX as SQLITE_REINDEX,
)
from _sqlite3 import (
    SQLITE_SAVEPOINT as SQLITE_SAVEPOINT,
)
from _sqlite3 import (
    SQLITE_SELECT as SQLITE_SELECT,
)
from _sqlite3 import (
    SQLITE_TRANSACTION as SQLITE_TRANSACTION,
)
from _sqlite3 import (
    SQLITE_UPDATE as SQLITE_UPDATE,
)
from _sqlite3 import (
    adapt as adapt,
)
from _sqlite3 import (
    adapters as adapters,
)
from _sqlite3 import (
    complete_statement as complete_statement,
)
from _sqlite3 import (
    connect as connect,
)
from _sqlite3 import (
    converters as converters,
)
from _sqlite3 import (
    enable_callback_tracebacks as enable_callback_tracebacks,
)
from _sqlite3 import (
    register_adapter as register_adapter,
)
from _sqlite3 import (
    register_converter as register_converter,
)
from _sqlite3 import (
    sqlite_version as sqlite_version,
)
from datetime import date, datetime, time
from sqlite3 import (
    Connection as Connection,
)
from sqlite3 import (
    Cursor as Cursor,
)
from sqlite3 import (
    DatabaseError as DatabaseError,
)
from sqlite3 import (
    DataError as DataError,
)
from sqlite3 import (
    Error as Error,
)
from sqlite3 import (
    IntegrityError as IntegrityError,
)
from sqlite3 import (
    InterfaceError as InterfaceError,
)
from sqlite3 import (
    InternalError as InternalError,
)
from sqlite3 import (
    NotSupportedError as NotSupportedError,
)
from sqlite3 import (
    OperationalError as OperationalError,
)
from sqlite3 import (
    PrepareProtocol as PrepareProtocol,
)
from sqlite3 import (
    ProgrammingError as ProgrammingError,
)
from sqlite3 import (
    Row as Row,
)
from sqlite3 import (
    Warning as Warning,
)
from typing import Literal

if sys.version_info >= (3, 12):
    from _sqlite3 import (
        LEGACY_TRANSACTION_CONTROL as LEGACY_TRANSACTION_CONTROL,
    )
    from _sqlite3 import (
        SQLITE_DBCONFIG_DEFENSIVE as SQLITE_DBCONFIG_DEFENSIVE,
    )
    from _sqlite3 import (
        SQLITE_DBCONFIG_DQS_DDL as SQLITE_DBCONFIG_DQS_DDL,
    )
    from _sqlite3 import (
        SQLITE_DBCONFIG_DQS_DML as SQLITE_DBCONFIG_DQS_DML,
    )
    from _sqlite3 import (
        SQLITE_DBCONFIG_ENABLE_FKEY as SQLITE_DBCONFIG_ENABLE_FKEY,
    )
    from _sqlite3 import (
        SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER as SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER,
    )
    from _sqlite3 import (
        SQLITE_DBCONFIG_ENABLE_LOAD_EXTENSION as SQLITE_DBCONFIG_ENABLE_LOAD_EXTENSION,
    )
    from _sqlite3 import (
        SQLITE_DBCONFIG_ENABLE_QPSG as SQLITE_DBCONFIG_ENABLE_QPSG,
    )
    from _sqlite3 import (
        SQLITE_DBCONFIG_ENABLE_TRIGGER as SQLITE_DBCONFIG_ENABLE_TRIGGER,
    )
    from _sqlite3 import (
        SQLITE_DBCONFIG_ENABLE_VIEW as SQLITE_DBCONFIG_ENABLE_VIEW,
    )
    from _sqlite3 import (
        SQLITE_DBCONFIG_LEGACY_ALTER_TABLE as SQLITE_DBCONFIG_LEGACY_ALTER_TABLE,
    )
    from _sqlite3 import (
        SQLITE_DBCONFIG_LEGACY_FILE_FORMAT as SQLITE_DBCONFIG_LEGACY_FILE_FORMAT,
    )
    from _sqlite3 import (
        SQLITE_DBCONFIG_NO_CKPT_ON_CLOSE as SQLITE_DBCONFIG_NO_CKPT_ON_CLOSE,
    )
    from _sqlite3 import (
        SQLITE_DBCONFIG_RESET_DATABASE as SQLITE_DBCONFIG_RESET_DATABASE,
    )
    from _sqlite3 import (
        SQLITE_DBCONFIG_TRIGGER_EQP as SQLITE_DBCONFIG_TRIGGER_EQP,
    )
    from _sqlite3 import (
        SQLITE_DBCONFIG_TRUSTED_SCHEMA as SQLITE_DBCONFIG_TRUSTED_SCHEMA,
    )
    from _sqlite3 import (
        SQLITE_DBCONFIG_WRITABLE_SCHEMA as SQLITE_DBCONFIG_WRITABLE_SCHEMA,
    )

if sys.version_info >= (3, 11):
    from _sqlite3 import (
        SQLITE_ABORT as SQLITE_ABORT,
    )
    from _sqlite3 import (
        SQLITE_ABORT_ROLLBACK as SQLITE_ABORT_ROLLBACK,
    )
    from _sqlite3 import (
        SQLITE_AUTH as SQLITE_AUTH,
    )
    from _sqlite3 import (
        SQLITE_AUTH_USER as SQLITE_AUTH_USER,
    )
    from _sqlite3 import (
        SQLITE_BUSY as SQLITE_BUSY,
    )
    from _sqlite3 import (
        SQLITE_BUSY_RECOVERY as SQLITE_BUSY_RECOVERY,
    )
    from _sqlite3 import (
        SQLITE_BUSY_SNAPSHOT as SQLITE_BUSY_SNAPSHOT,
    )
    from _sqlite3 import (
        SQLITE_BUSY_TIMEOUT as SQLITE_BUSY_TIMEOUT,
    )
    from _sqlite3 import (
        SQLITE_CANTOPEN as SQLITE_CANTOPEN,
    )
    from _sqlite3 import (
        SQLITE_CANTOPEN_CONVPATH as SQLITE_CANTOPEN_CONVPATH,
    )
    from _sqlite3 import (
        SQLITE_CANTOPEN_DIRTYWAL as SQLITE_CANTOPEN_DIRTYWAL,
    )
    from _sqlite3 import (
        SQLITE_CANTOPEN_FULLPATH as SQLITE_CANTOPEN_FULLPATH,
    )
    from _sqlite3 import (
        SQLITE_CANTOPEN_ISDIR as SQLITE_CANTOPEN_ISDIR,
    )
    from _sqlite3 import (
        SQLITE_CANTOPEN_NOTEMPDIR as SQLITE_CANTOPEN_NOTEMPDIR,
    )
    from _sqlite3 import (
        SQLITE_CANTOPEN_SYMLINK as SQLITE_CANTOPEN_SYMLINK,
    )
    from _sqlite3 import (
        SQLITE_CONSTRAINT as SQLITE_CONSTRAINT,
    )
    from _sqlite3 import (
        SQLITE_CONSTRAINT_CHECK as SQLITE_CONSTRAINT_CHECK,
    )
    from _sqlite3 import (
        SQLITE_CONSTRAINT_COMMITHOOK as SQLITE_CONSTRAINT_COMMITHOOK,
    )
    from _sqlite3 import (
        SQLITE_CONSTRAINT_FOREIGNKEY as SQLITE_CONSTRAINT_FOREIGNKEY,
    )
    from _sqlite3 import (
        SQLITE_CONSTRAINT_FUNCTION as SQLITE_CONSTRAINT_FUNCTION,
    )
    from _sqlite3 import (
        SQLITE_CONSTRAINT_NOTNULL as SQLITE_CONSTRAINT_NOTNULL,
    )
    from _sqlite3 import (
        SQLITE_CONSTRAINT_PINNED as SQLITE_CONSTRAINT_PINNED,
    )
    from _sqlite3 import (
        SQLITE_CONSTRAINT_PRIMARYKEY as SQLITE_CONSTRAINT_PRIMARYKEY,
    )
    from _sqlite3 import (
        SQLITE_CONSTRAINT_ROWID as SQLITE_CONSTRAINT_ROWID,
    )
    from _sqlite3 import (
        SQLITE_CONSTRAINT_TRIGGER as SQLITE_CONSTRAINT_TRIGGER,
    )
    from _sqlite3 import (
        SQLITE_CONSTRAINT_UNIQUE as SQLITE_CONSTRAINT_UNIQUE,
    )
    from _sqlite3 import (
        SQLITE_CONSTRAINT_VTAB as SQLITE_CONSTRAINT_VTAB,
    )
    from _sqlite3 import (
        SQLITE_CORRUPT as SQLITE_CORRUPT,
    )
    from _sqlite3 import (
        SQLITE_CORRUPT_INDEX as SQLITE_CORRUPT_INDEX,
    )
    from _sqlite3 import (
        SQLITE_CORRUPT_SEQUENCE as SQLITE_CORRUPT_SEQUENCE,
    )
    from _sqlite3 import (
        SQLITE_CORRUPT_VTAB as SQLITE_CORRUPT_VTAB,
    )
    from _sqlite3 import (
        SQLITE_EMPTY as SQLITE_EMPTY,
    )
    from _sqlite3 import (
        SQLITE_ERROR as SQLITE_ERROR,
    )
    from _sqlite3 import (
        SQLITE_ERROR_MISSING_COLLSEQ as SQLITE_ERROR_MISSING_COLLSEQ,
    )
    from _sqlite3 import (
        SQLITE_ERROR_RETRY as SQLITE_ERROR_RETRY,
    )
    from _sqlite3 import (
        SQLITE_ERROR_SNAPSHOT as SQLITE_ERROR_SNAPSHOT,
    )
    from _sqlite3 import (
        SQLITE_FORMAT as SQLITE_FORMAT,
    )
    from _sqlite3 import (
        SQLITE_FULL as SQLITE_FULL,
    )
    from _sqlite3 import (
        SQLITE_INTERNAL as SQLITE_INTERNAL,
    )
    from _sqlite3 import (
        SQLITE_INTERRUPT as SQLITE_INTERRUPT,
    )
    from _sqlite3 import (
        SQLITE_IOERR as SQLITE_IOERR,
    )
    from _sqlite3 import (
        SQLITE_IOERR_ACCESS as SQLITE_IOERR_ACCESS,
    )
    from _sqlite3 import (
        SQLITE_IOERR_AUTH as SQLITE_IOERR_AUTH,
    )
    from _sqlite3 import (
        SQLITE_IOERR_BEGIN_ATOMIC as SQLITE_IOERR_BEGIN_ATOMIC,
    )
    from _sqlite3 import (
        SQLITE_IOERR_BLOCKED as SQLITE_IOERR_BLOCKED,
    )
    from _sqlite3 import (
        SQLITE_IOERR_CHECKRESERVEDLOCK as SQLITE_IOERR_CHECKRESERVEDLOCK,
    )
    from _sqlite3 import (
        SQLITE_IOERR_CLOSE as SQLITE_IOERR_CLOSE,
    )
    from _sqlite3 import (
        SQLITE_IOERR_COMMIT_ATOMIC as SQLITE_IOERR_COMMIT_ATOMIC,
    )
    from _sqlite3 import (
        SQLITE_IOERR_CONVPATH as SQLITE_IOERR_CONVPATH,
    )
    from _sqlite3 import (
        SQLITE_IOERR_CORRUPTFS as SQLITE_IOERR_CORRUPTFS,
    )
    from _sqlite3 import (
        SQLITE_IOERR_DATA as SQLITE_IOERR_DATA,
    )
    from _sqlite3 import (
        SQLITE_IOERR_DELETE as SQLITE_IOERR_DELETE,
    )
    from _sqlite3 import (
        SQLITE_IOERR_DELETE_NOENT as SQLITE_IOERR_DELETE_NOENT,
    )
    from _sqlite3 import (
        SQLITE_IOERR_DIR_CLOSE as SQLITE_IOERR_DIR_CLOSE,
    )
    from _sqlite3 import (
        SQLITE_IOERR_DIR_FSYNC as SQLITE_IOERR_DIR_FSYNC,
    )
    from _sqlite3 import (
        SQLITE_IOERR_FSTAT as SQLITE_IOERR_FSTAT,
    )
    from _sqlite3 import (
        SQLITE_IOERR_FSYNC as SQLITE_IOERR_FSYNC,
    )
    from _sqlite3 import (
        SQLITE_IOERR_GETTEMPPATH as SQLITE_IOERR_GETTEMPPATH,
    )
    from _sqlite3 import (
        SQLITE_IOERR_LOCK as SQLITE_IOERR_LOCK,
    )
    from _sqlite3 import (
        SQLITE_IOERR_MMAP as SQLITE_IOERR_MMAP,
    )
    from _sqlite3 import (
        SQLITE_IOERR_NOMEM as SQLITE_IOERR_NOMEM,
    )
    from _sqlite3 import (
        SQLITE_IOERR_RDLOCK as SQLITE_IOERR_RDLOCK,
    )
    from _sqlite3 import (
        SQLITE_IOERR_READ as SQLITE_IOERR_READ,
    )
    from _sqlite3 import (
        SQLITE_IOERR_ROLLBACK_ATOMIC as SQLITE_IOERR_ROLLBACK_ATOMIC,
    )
    from _sqlite3 import (
        SQLITE_IOERR_SEEK as SQLITE_IOERR_SEEK,
    )
    from _sqlite3 import (
        SQLITE_IOERR_SHMLOCK as SQLITE_IOERR_SHMLOCK,
    )
    from _sqlite3 import (
        SQLITE_IOERR_SHMMAP as SQLITE_IOERR_SHMMAP,
    )
    from _sqlite3 import (
        SQLITE_IOERR_SHMOPEN as SQLITE_IOERR_SHMOPEN,
    )
    from _sqlite3 import (
        SQLITE_IOERR_SHMSIZE as SQLITE_IOERR_SHMSIZE,
    )
    from _sqlite3 import (
        SQLITE_IOERR_SHORT_READ as SQLITE_IOERR_SHORT_READ,
    )
    from _sqlite3 import (
        SQLITE_IOERR_TRUNCATE as SQLITE_IOERR_TRUNCATE,
    )
    from _sqlite3 import (
        SQLITE_IOERR_UNLOCK as SQLITE_IOERR_UNLOCK,
    )
    from _sqlite3 import (
        SQLITE_IOERR_VNODE as SQLITE_IOERR_VNODE,
    )
    from _sqlite3 import (
        SQLITE_IOERR_WRITE as SQLITE_IOERR_WRITE,
    )
    from _sqlite3 import (
        SQLITE_LIMIT_ATTACHED as SQLITE_LIMIT_ATTACHED,
    )
    from _sqlite3 import (
        SQLITE_LIMIT_COLUMN as SQLITE_LIMIT_COLUMN,
    )
    from _sqlite3 import (
        SQLITE_LIMIT_COMPOUND_SELECT as SQLITE_LIMIT_COMPOUND_SELECT,
    )
    from _sqlite3 import (
        SQLITE_LIMIT_EXPR_DEPTH as SQLITE_LIMIT_EXPR_DEPTH,
    )
    from _sqlite3 import (
        SQLITE_LIMIT_FUNCTION_ARG as SQLITE_LIMIT_FUNCTION_ARG,
    )
    from _sqlite3 import (
        SQLITE_LIMIT_LENGTH as SQLITE_LIMIT_LENGTH,
    )
    from _sqlite3 import (
        SQLITE_LIMIT_LIKE_PATTERN_LENGTH as SQLITE_LIMIT_LIKE_PATTERN_LENGTH,
    )
    from _sqlite3 import (
        SQLITE_LIMIT_SQL_LENGTH as SQLITE_LIMIT_SQL_LENGTH,
    )
    from _sqlite3 import (
        SQLITE_LIMIT_TRIGGER_DEPTH as SQLITE_LIMIT_TRIGGER_DEPTH,
    )
    from _sqlite3 import (
        SQLITE_LIMIT_VARIABLE_NUMBER as SQLITE_LIMIT_VARIABLE_NUMBER,
    )
    from _sqlite3 import (
        SQLITE_LIMIT_VDBE_OP as SQLITE_LIMIT_VDBE_OP,
    )
    from _sqlite3 import (
        SQLITE_LIMIT_WORKER_THREADS as SQLITE_LIMIT_WORKER_THREADS,
    )
    from _sqlite3 import (
        SQLITE_LOCKED as SQLITE_LOCKED,
    )
    from _sqlite3 import (
        SQLITE_LOCKED_SHAREDCACHE as SQLITE_LOCKED_SHAREDCACHE,
    )
    from _sqlite3 import (
        SQLITE_LOCKED_VTAB as SQLITE_LOCKED_VTAB,
    )
    from _sqlite3 import (
        SQLITE_MISMATCH as SQLITE_MISMATCH,
    )
    from _sqlite3 import (
        SQLITE_MISUSE as SQLITE_MISUSE,
    )
    from _sqlite3 import (
        SQLITE_NOLFS as SQLITE_NOLFS,
    )
    from _sqlite3 import (
        SQLITE_NOMEM as SQLITE_NOMEM,
    )
    from _sqlite3 import (
        SQLITE_NOTADB as SQLITE_NOTADB,
    )
    from _sqlite3 import (
        SQLITE_NOTFOUND as SQLITE_NOTFOUND,
    )
    from _sqlite3 import (
        SQLITE_NOTICE as SQLITE_NOTICE,
    )
    from _sqlite3 import (
        SQLITE_NOTICE_RECOVER_ROLLBACK as SQLITE_NOTICE_RECOVER_ROLLBACK,
    )
    from _sqlite3 import (
        SQLITE_NOTICE_RECOVER_WAL as SQLITE_NOTICE_RECOVER_WAL,
    )
    from _sqlite3 import (
        SQLITE_OK_LOAD_PERMANENTLY as SQLITE_OK_LOAD_PERMANENTLY,
    )
    from _sqlite3 import (
        SQLITE_OK_SYMLINK as SQLITE_OK_SYMLINK,
    )
    from _sqlite3 import (
        SQLITE_PERM as SQLITE_PERM,
    )
    from _sqlite3 import (
        SQLITE_PROTOCOL as SQLITE_PROTOCOL,
    )
    from _sqlite3 import (
        SQLITE_RANGE as SQLITE_RANGE,
    )
    from _sqlite3 import (
        SQLITE_READONLY as SQLITE_READONLY,
    )
    from _sqlite3 import (
        SQLITE_READONLY_CANTINIT as SQLITE_READONLY_CANTINIT,
    )
    from _sqlite3 import (
        SQLITE_READONLY_CANTLOCK as SQLITE_READONLY_CANTLOCK,
    )
    from _sqlite3 import (
        SQLITE_READONLY_DBMOVED as SQLITE_READONLY_DBMOVED,
    )
    from _sqlite3 import (
        SQLITE_READONLY_DIRECTORY as SQLITE_READONLY_DIRECTORY,
    )
    from _sqlite3 import (
        SQLITE_READONLY_RECOVERY as SQLITE_READONLY_RECOVERY,
    )
    from _sqlite3 import (
        SQLITE_READONLY_ROLLBACK as SQLITE_READONLY_ROLLBACK,
    )
    from _sqlite3 import (
        SQLITE_ROW as SQLITE_ROW,
    )
    from _sqlite3 import (
        SQLITE_SCHEMA as SQLITE_SCHEMA,
    )
    from _sqlite3 import (
        SQLITE_TOOBIG as SQLITE_TOOBIG,
    )
    from _sqlite3 import (
        SQLITE_WARNING as SQLITE_WARNING,
    )
    from _sqlite3 import (
        SQLITE_WARNING_AUTOINDEX as SQLITE_WARNING_AUTOINDEX,
    )
    from sqlite3 import Blob as Blob

if sys.version_info < (3, 14):
    # Deprecated and removed from _sqlite3 in 3.12, but removed from here in 3.14.
    version: str

if sys.version_info < (3, 12):
    if sys.version_info >= (3, 10):
        # deprecation wrapper that has a different name for the argument...
        def enable_shared_cache(enable: int) -> None: ...
    else:
        from _sqlite3 import enable_shared_cache as enable_shared_cache

if sys.version_info < (3, 10):
    from _sqlite3 import OptimizedUnicode as OptimizedUnicode

paramstyle: str
threadsafety: Literal[0, 1, 3]
apilevel: str
Date = date
Time = time
Timestamp = datetime

def DateFromTicks(ticks: float) -> Date: ...
def TimeFromTicks(ticks: float) -> Time: ...
def TimestampFromTicks(ticks: float) -> Timestamp: ...

if sys.version_info < (3, 14):
    # Deprecated in 3.12, removed in 3.14.
    version_info: tuple[int, int, int]

sqlite_version_info: tuple[int, int, int]
Binary = memoryview
