import sys

if sys.platform == "win32":
    # Actually defined here and re-exported from os at runtime,
    # but this leads to less code duplication
    from os import (
        F_OK as F_OK,
    )
    from os import (
        O_APPEND as O_APPEND,
    )
    from os import (
        O_BINARY as O_BINARY,
    )
    from os import (
        O_CREAT as O_CREAT,
    )
    from os import (
        O_EXCL as O_EXCL,
    )
    from os import (
        O_NOINHERIT as O_NOINHERIT,
    )
    from os import (
        O_RANDOM as O_RANDOM,
    )
    from os import (
        O_RDONLY as O_RDONLY,
    )
    from os import (
        O_RDWR as O_RDWR,
    )
    from os import (
        O_SEQUENTIAL as O_SEQUENTIAL,
    )
    from os import (
        O_SHORT_LIVED as O_SHORT_LIVED,
    )
    from os import (
        O_TEMPORARY as O_TEMPORARY,
    )
    from os import (
        O_TEXT as O_TEXT,
    )
    from os import (
        O_TRUNC as O_TRUNC,
    )
    from os import (
        O_WRONLY as O_WRONLY,
    )
    from os import (
        P_DETACH as P_DETACH,
    )
    from os import (
        P_NOWAIT as P_NOWAIT,
    )
    from os import (
        P_NOWAITO as P_NOWAITO,
    )
    from os import (
        P_OVERLAY as P_OVERLAY,
    )
    from os import (
        P_WAIT as P_WAIT,
    )
    from os import (
        R_OK as R_OK,
    )
    from os import (
        TMP_MAX as TMP_MAX,
    )
    from os import (
        W_OK as W_OK,
    )
    from os import (
        X_OK as X_OK,
    )
    from os import (
        DirEntry as DirEntry,
    )
    from os import (
        abort as abort,
    )
    from os import (
        access as access,
    )
    from os import (
        chdir as chdir,
    )
    from os import (
        chmod as chmod,
    )
    from os import (
        close as close,
    )
    from os import (
        closerange as closerange,
    )
    from os import (
        cpu_count as cpu_count,
    )
    from os import (
        device_encoding as device_encoding,
    )
    from os import (
        dup as dup,
    )
    from os import (
        dup2 as dup2,
    )
    from os import (
        error as error,
    )
    from os import (
        execv as execv,
    )
    from os import (
        execve as execve,
    )
    from os import (
        fspath as fspath,
    )
    from os import (
        fstat as fstat,
    )
    from os import (
        fsync as fsync,
    )
    from os import (
        ftruncate as ftruncate,
    )
    from os import (
        get_handle_inheritable as get_handle_inheritable,
    )
    from os import (
        get_inheritable as get_inheritable,
    )
    from os import (
        get_terminal_size as get_terminal_size,
    )
    from os import (
        getcwd as getcwd,
    )
    from os import (
        getcwdb as getcwdb,
    )
    from os import (
        getlogin as getlogin,
    )
    from os import (
        getpid as getpid,
    )
    from os import (
        getppid as getppid,
    )
    from os import (
        isatty as isatty,
    )
    from os import (
        kill as kill,
    )
    from os import (
        link as link,
    )
    from os import (
        listdir as listdir,
    )
    from os import (
        lseek as lseek,
    )
    from os import (
        lstat as lstat,
    )
    from os import (
        mkdir as mkdir,
    )
    from os import (
        open as open,
    )
    from os import (
        pipe as pipe,
    )
    from os import (
        putenv as putenv,
    )
    from os import (
        read as read,
    )
    from os import (
        readlink as readlink,
    )
    from os import (
        remove as remove,
    )
    from os import (
        rename as rename,
    )
    from os import (
        replace as replace,
    )
    from os import (
        rmdir as rmdir,
    )
    from os import (
        scandir as scandir,
    )
    from os import (
        set_handle_inheritable as set_handle_inheritable,
    )
    from os import (
        set_inheritable as set_inheritable,
    )
    from os import (
        spawnv as spawnv,
    )
    from os import (
        spawnve as spawnve,
    )
    from os import (
        startfile as startfile,
    )
    from os import (
        stat as stat,
    )
    from os import (
        stat_result as stat_result,
    )
    from os import (
        statvfs_result as statvfs_result,
    )
    from os import (
        strerror as strerror,
    )
    from os import (
        symlink as symlink,
    )
    from os import (
        system as system,
    )
    from os import (
        terminal_size as terminal_size,
    )
    from os import (
        times as times,
    )
    from os import (
        times_result as times_result,
    )
    from os import (
        truncate as truncate,
    )
    from os import (
        umask as umask,
    )
    from os import (
        uname_result as uname_result,
    )
    from os import (
        unlink as unlink,
    )
    from os import (
        unsetenv as unsetenv,
    )
    from os import (
        urandom as urandom,
    )
    from os import (
        utime as utime,
    )
    from os import (
        waitpid as waitpid,
    )
    from os import (
        waitstatus_to_exitcode as waitstatus_to_exitcode,
    )
    from os import (
        write as write,
    )

    if sys.version_info >= (3, 11):
        from os import EX_OK as EX_OK
    if sys.version_info >= (3, 12):
        from os import (
            get_blocking as get_blocking,
        )
        from os import (
            listdrives as listdrives,
        )
        from os import (
            listmounts as listmounts,
        )
        from os import (
            listvolumes as listvolumes,
        )
        from os import (
            set_blocking as set_blocking,
        )
    if sys.version_info >= (3, 13):
        from os import fchmod as fchmod
        from os import lchmod as lchmod

    if sys.version_info >= (3, 14):
        from os import readinto as readinto

    environ: dict[str, str]
