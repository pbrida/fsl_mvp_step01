from collections.abc import Callable, Iterable
from typing import Any, TypeVar, overload

from _typeshed import Unused
from psycopg2._psycopg import (
    BINARYARRAY as BINARYARRAY,
)
from psycopg2._psycopg import (
    BOOLEAN as BOOLEAN,
)
from psycopg2._psycopg import (
    BOOLEANARRAY as BOOLEANARRAY,
)
from psycopg2._psycopg import (
    BYTES as BYTES,
)
from psycopg2._psycopg import (
    BYTESARRAY as BYTESARRAY,
)
from psycopg2._psycopg import (
    DATE as DATE,
)
from psycopg2._psycopg import (
    DATEARRAY as DATEARRAY,
)
from psycopg2._psycopg import (
    DATETIMEARRAY as DATETIMEARRAY,
)
from psycopg2._psycopg import (
    DECIMAL as DECIMAL,
)
from psycopg2._psycopg import (
    DECIMALARRAY as DECIMALARRAY,
)
from psycopg2._psycopg import (
    FLOAT as FLOAT,
)
from psycopg2._psycopg import (
    FLOATARRAY as FLOATARRAY,
)
from psycopg2._psycopg import (
    INTEGER as INTEGER,
)
from psycopg2._psycopg import (
    INTEGERARRAY as INTEGERARRAY,
)
from psycopg2._psycopg import (
    INTERVAL as INTERVAL,
)
from psycopg2._psycopg import (
    INTERVALARRAY as INTERVALARRAY,
)
from psycopg2._psycopg import (
    LONGINTEGER as LONGINTEGER,
)
from psycopg2._psycopg import (
    LONGINTEGERARRAY as LONGINTEGERARRAY,
)
from psycopg2._psycopg import (
    PYDATE as PYDATE,
)
from psycopg2._psycopg import (
    PYDATEARRAY as PYDATEARRAY,
)
from psycopg2._psycopg import (
    PYDATETIME as PYDATETIME,
)
from psycopg2._psycopg import (
    PYDATETIMEARRAY as PYDATETIMEARRAY,
)
from psycopg2._psycopg import (
    PYDATETIMETZ as PYDATETIMETZ,
)
from psycopg2._psycopg import (
    PYDATETIMETZARRAY as PYDATETIMETZARRAY,
)
from psycopg2._psycopg import (
    PYINTERVAL as PYINTERVAL,
)
from psycopg2._psycopg import (
    PYINTERVALARRAY as PYINTERVALARRAY,
)
from psycopg2._psycopg import (
    PYTIME as PYTIME,
)
from psycopg2._psycopg import (
    PYTIMEARRAY as PYTIMEARRAY,
)
from psycopg2._psycopg import (
    ROWIDARRAY as ROWIDARRAY,
)
from psycopg2._psycopg import (
    STRINGARRAY as STRINGARRAY,
)
from psycopg2._psycopg import (
    TIME as TIME,
)
from psycopg2._psycopg import (
    TIMEARRAY as TIMEARRAY,
)
from psycopg2._psycopg import (
    UNICODE as UNICODE,
)
from psycopg2._psycopg import (
    UNICODEARRAY as UNICODEARRAY,
)
from psycopg2._psycopg import (
    AsIs as AsIs,
)
from psycopg2._psycopg import (
    Binary as Binary,
)
from psycopg2._psycopg import (
    Boolean as Boolean,
)
from psycopg2._psycopg import (
    Column as Column,
)
from psycopg2._psycopg import (
    ConnectionInfo as ConnectionInfo,
)
from psycopg2._psycopg import (
    DateFromPy as DateFromPy,
)
from psycopg2._psycopg import (
    Diagnostics as Diagnostics,
)
from psycopg2._psycopg import (
    Float as Float,
)
from psycopg2._psycopg import (
    Int as Int,
)
from psycopg2._psycopg import (
    IntervalFromPy as IntervalFromPy,
)
from psycopg2._psycopg import (
    ISQLQuote as ISQLQuote,
)
from psycopg2._psycopg import (
    Notify as Notify,
)
from psycopg2._psycopg import (
    QueryCanceledError as QueryCanceledError,
)
from psycopg2._psycopg import (
    QuotedString as QuotedString,
)
from psycopg2._psycopg import (
    TimeFromPy as TimeFromPy,
)
from psycopg2._psycopg import (
    TimestampFromPy as TimestampFromPy,
)
from psycopg2._psycopg import (
    TransactionRollbackError as TransactionRollbackError,
)
from psycopg2._psycopg import (
    Xid as Xid,
)
from psycopg2._psycopg import (
    _ISQLQuoteProto,
    _type,
)
from psycopg2._psycopg import (
    adapt as adapt,
)
from psycopg2._psycopg import (
    adapters as adapters,
)
from psycopg2._psycopg import (
    binary_types as binary_types,
)
from psycopg2._psycopg import (
    connection as connection,
)
from psycopg2._psycopg import (
    cursor as cursor,
)
from psycopg2._psycopg import (
    encodings as encodings,
)
from psycopg2._psycopg import (
    encrypt_password as encrypt_password,
)
from psycopg2._psycopg import (
    get_wait_callback as get_wait_callback,
)
from psycopg2._psycopg import (
    libpq_version as libpq_version,
)
from psycopg2._psycopg import (
    lobject as lobject,
)
from psycopg2._psycopg import (
    new_array_type as new_array_type,
)
from psycopg2._psycopg import (
    new_type as new_type,
)
from psycopg2._psycopg import (
    parse_dsn as parse_dsn,
)
from psycopg2._psycopg import (
    quote_ident as quote_ident,
)
from psycopg2._psycopg import (
    register_type as register_type,
)
from psycopg2._psycopg import (
    set_wait_callback as set_wait_callback,
)
from psycopg2._psycopg import (
    string_types as string_types,
)

ISOLATION_LEVEL_AUTOCOMMIT: int
ISOLATION_LEVEL_READ_UNCOMMITTED: int
ISOLATION_LEVEL_READ_COMMITTED: int
ISOLATION_LEVEL_REPEATABLE_READ: int
ISOLATION_LEVEL_SERIALIZABLE: int
ISOLATION_LEVEL_DEFAULT: Any
STATUS_SETUP: int
STATUS_READY: int
STATUS_BEGIN: int
STATUS_SYNC: int
STATUS_ASYNC: int
STATUS_PREPARED: int
STATUS_IN_TRANSACTION: int
POLL_OK: int
POLL_READ: int
POLL_WRITE: int
POLL_ERROR: int
TRANSACTION_STATUS_IDLE: int
TRANSACTION_STATUS_ACTIVE: int
TRANSACTION_STATUS_INTRANS: int
TRANSACTION_STATUS_INERROR: int
TRANSACTION_STATUS_UNKNOWN: int

_T = TypeVar("_T")

def register_adapter(typ: type[_T], callable: Callable[[_T], _ISQLQuoteProto]) -> None: ...

class SQL_IN:
    def __init__(self, seq: Iterable[object]) -> None: ...
    def prepare(self, conn: connection | None) -> None: ...
    def getquoted(self) -> bytes: ...

class NoneAdapter:
    def __init__(self, obj: Unused) -> None: ...
    def getquoted(self, _null: bytes = b"NULL") -> bytes: ...

@overload
def make_dsn(dsn: bytes) -> bytes: ...  # type: ignore[overload-overlap]
@overload
def make_dsn(dsn: None = None) -> str: ...
@overload
def make_dsn(dsn: str | bytes | None = None, **kwargs: Any) -> str: ...

JSON: _type
JSONARRAY: _type | None
JSONB: _type
JSONBARRAY: _type | None
